#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ncn-lifecycle-rebuild-
  # labels:
  #   targetNcn: {{.TargetNcn}}
spec:
  volumes:
    - name: ssh
      hostPath:
        path: /root/.ssh
        type: Directory
  podGC:
    strategy: OnPodCompletion
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            {{- range $index,$value := .TargetNcns }}
            - {{$value -}}
            {{- end }}
  entrypoint: main
  templates:
    - name: main
      dag:
        failFast: true
        tasks:
          {{- range $index,$value := .TargetNcns }}
          # drain: sync
          #     Only one worker can be drained at a time
          - name: drain-{{$value}}
            template: drain
            arguments:
              parameters:
              - name: targetNcn
                value: {{$value}}
              - name: dryRun
                value: "{{$.DryRun}}"
          # wipe and reboot: parallel
          #     once a worker node is drained from k8s
          #     we can safely wipe and reboot this node
          #     regardless of what state other nodes are
          - name: wipe-and-reboot-{{$value}}
            dependencies: 
              - drain-{{$value}}
            template: wipe-and-reboot
            arguments:
              parameters:
              - name: targetNcn
                value: {{$value}}
              - name: dryRun
                value: "{{$.DryRun}}"
          # post rebuild: parallel
          #     Post rebuild validation can be run in parallel
          - name: post-rebuild-{{$value}}
            dependencies: 
              - wipe-and-reboot-{{$value}}
            template: post-rebuild
            arguments:
              parameters:
              - name: targetNcn
                value: {{$value}}
              - name: dryRun
                value: "{{$.DryRun}}"
          {{- end }}
    # reference to individual tasks
    - name: drain
      synchronization:
        mutex:
          name: drain
      inputs:
        {{- include "worker.common.parameters" . | indent 8 }}
      dag:
        failFast: true
        {{- include "worker.drain" . | indent 8 }}
    - name: wipe-and-reboot
      inputs:
        {{- include "worker.common.parameters" . | indent 8 }}
      dag:
        failFast: true
        {{- include "worker.wipe-and-reboot" . | indent 8 }}
    - name: post-rebuild
      inputs:
        {{- include "worker.common.parameters" . | indent 8 }}
      dag:
        failFast: true
        {{- include "worker.post-rebuild" . | indent 8 }}
