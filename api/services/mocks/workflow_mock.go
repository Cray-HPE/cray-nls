// Code generated by MockGen. DO NOT EDIT.
// Source: api/services/workflow.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	v1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockWorkflowServiceInterface is a mock of WorkflowServiceInterface interface.
type MockWorkflowServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWorkflowServiceInterfaceMockRecorder
}

// MockWorkflowServiceInterfaceMockRecorder is the mock recorder for MockWorkflowServiceInterface.
type MockWorkflowServiceInterfaceMockRecorder struct {
	mock *MockWorkflowServiceInterface
}

// NewMockWorkflowServiceInterface creates a new mock instance.
func NewMockWorkflowServiceInterface(ctrl *gomock.Controller) *MockWorkflowServiceInterface {
	mock := &MockWorkflowServiceInterface{ctrl: ctrl}
	mock.recorder = &MockWorkflowServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkflowServiceInterface) EXPECT() *MockWorkflowServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateWorkflow mocks base method.
func (m *MockWorkflowServiceInterface) CreateWorkflow(hostname string) (*v1alpha1.Workflow, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWorkflow", hostname)
	ret0, _ := ret[0].(*v1alpha1.Workflow)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWorkflow indicates an expected call of CreateWorkflow.
func (mr *MockWorkflowServiceInterfaceMockRecorder) CreateWorkflow(hostname interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWorkflow", reflect.TypeOf((*MockWorkflowServiceInterface)(nil).CreateWorkflow), hostname)
}

// GetWorkflows mocks base method.
func (m *MockWorkflowServiceInterface) GetWorkflows(ctx *gin.Context) (*v1alpha1.WorkflowList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkflows", ctx)
	ret0, _ := ret[0].(*v1alpha1.WorkflowList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkflows indicates an expected call of GetWorkflows.
func (mr *MockWorkflowServiceInterfaceMockRecorder) GetWorkflows(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkflows", reflect.TypeOf((*MockWorkflowServiceInterface)(nil).GetWorkflows), ctx)
}

// initializeWorkflowTemplate mocks base method.
func (m *MockWorkflowServiceInterface) initializeWorkflowTemplate(template []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "initializeWorkflowTemplate", template)
	ret0, _ := ret[0].(error)
	return ret0
}

// initializeWorkflowTemplate indicates an expected call of initializeWorkflowTemplate.
func (mr *MockWorkflowServiceInterfaceMockRecorder) initializeWorkflowTemplate(template interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "initializeWorkflowTemplate", reflect.TypeOf((*MockWorkflowServiceInterface)(nil).initializeWorkflowTemplate), template)
}
