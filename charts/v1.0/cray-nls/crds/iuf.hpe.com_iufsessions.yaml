---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: iufsessions.iuf.hpe.com
spec:
  group: iuf.hpe.com
  names:
    kind: IufSession
    listKind: IufSessionList
    plural: iufsessions
    singular: iufsession
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: IufSession
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An IUF session represents the intent of an Admin to initiate
              an install-upgrade workflow. It contains both input data, as well as
              any intermediary data that is needed to generate the final Argo workflow.
            properties:
              bootprep_config_managed:
                items:
                  type: string
                type: array
              bootprep_config_management:
                items:
                  type: string
                type: array
              limit_nodes:
                items:
                  type: string
                type: array
              media_dir:
                description: location of media
                type: string
              products:
                items:
                  properties:
                    name:
                      description: The name of the product
                      type: string
                    original_location:
                      description: The original location of the extracted tar in on
                        the physical storage.
                      type: string
                    version:
                      description: The version of the product.
                      type: string
                  required:
                  - name
                  - original_location
                  - version
                  type: object
                type: array
              site_parameters:
                description: json string
                type: string
              stages:
                description: The stages that need to be executed. This is either explicitly
                  specified by the Admin, or it is computed from the workflow type.
                  An Stage is a group of Operations. Stages represent the overall
                  workflow at a high-level, and executing a stage means executing
                  a bunch of Operations in a predefined manner.  An Admin can specify
                  the stages that must be executed for an install-upgrade workflow.
                  And Product Developers can extend each stage with custom hook scripts
                  that they would like to run before and after the stage's execution.  The
                  high-level stages allow their configuration would revealing too
                  many details to the consumers of IUF. if not specified, we apply
                  all stages
                items:
                  type: string
                type: array
            required:
            - bootprep_config_managed
            - bootprep_config_management
            - limit_nodes
            - media_dir
            - products
            - site_parameters
            - stages
            type: object
          status:
            properties:
              current_state:
                properties:
                  comment:
                    type: string
                  type:
                    enum:
                    - not_started
                    - in_progress
                    - error
                    - complete
                    type: string
                required:
                - comment
                - type
                type: object
              products:
                items:
                  properties:
                    products:
                      type: string
                    state:
                      enum:
                      - not_started
                      - in_progress
                      - error
                      - complete
                      type: string
                    workflou_id:
                      type: string
                    workflou_output:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                  - products
                  - state
                  - workflou_id
                  - workflou_output
                  type: object
                type: array
            required:
            - current_state
            - products
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
