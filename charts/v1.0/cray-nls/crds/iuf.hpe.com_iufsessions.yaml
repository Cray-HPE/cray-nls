---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: iufsessions.iuf.hpe.com
spec:
  group: iuf.hpe.com
  names:
    kind: IufSession
    listKind: IufSessionList
    plural: iufsessions
    singular: iufsession
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: IufSession
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An IUF session represents the intent of an Admin to initiate
              an install-upgrade workflow. It contains both input data, as well as
              any intermediary data that is needed to generate the final Argo workflow.
            properties:
              input_params:
                description: The input parameters supplied by the Admin.
                properties:
                  vcs_working_branch_pattern:
                    description: 'The pattern to use for all products. Use the following
                      variables in braces {} to specify the pattern:  {product_name}
                      {product_version}  E.g.  {product_name}-{product_version}-test-branch'
                    type: string
                  vcs_working_branch_per_product:
                    additionalProperties:
                      type: string
                    description: Specify the working branch name per product. This
                      is an object where the key is the product name, and the value
                      is the exact name (not a pattern) of the VCS branch for that
                      product.
                    type: object
                type: object
              products:
                description: The products that need to be installed, as specified
                  by the Admin.
                items:
                  properties:
                    after_hook_scripts:
                      additionalProperties:
                        type: string
                      description: Any after hook scripts for this product. This is
                        an object where the key is operation name, and value is the
                        CR name of the hook script for this product.  Hook scripts
                        are executed either before or after an execution of a operation.
                        They are specified in each product's distribution file, as
                        part of the iuf-manifest.yaml.  The hook scripts are initially
                        taken from the product distribution file and stored in S3,
                        so that they can later be referenced.
                      type: object
                    before_hook_scripts:
                      additionalProperties:
                        type: string
                      description: Any before hook scripts for this product. This
                        is an object where the key is operation name, and value is
                        the CR name of the hook script for this product.  Hook scripts
                        are executed either before or after an execution of a operation.
                        They are specified in each product's distribution file, as
                        part of the iuf-manifest.yaml.  The hook scripts are initially
                        taken from the product distribution file and stored in S3,
                        so that they can later be referenced.
                      type: object
                    iuf_manifest_s3_location:
                      description: The location of the product manifest uploaded into
                        s3
                      type: string
                    name:
                      description: The name of the product
                      type: string
                    original_location:
                      description: The original location of the extracted tar in on
                        the physical storage.
                      type: string
                    version:
                      description: The version of the product.
                      type: string
                  required:
                  - iuf_manifest_s3_location
                  - name
                  - original_location
                  - version
                  type: object
                type: array
              stages:
                description: The stages that need to be executed. This is either explicitly
                  specified by the Admin, or it is computed from the workflow type.
                  An Stage is a group of Operations. Stages represent the overall
                  workflow at a high-level, and executing a stage means executing
                  a bunch of Operations in a predefined manner.  An Admin can specify
                  the stages that must be executed for an install-upgrade workflow.
                  And Product Developers can extend each stage with custom hook scripts
                  that they would like to run before and after the stage's execution.  The
                  high-level stages allow their configuration would revealing too
                  many details to the consumers of IUF. if not specified, we apply
                  all stages
                items:
                  type: string
                type: array
              workflow_type:
                description: What type of workflow are we executing? install or upgrade
                enum:
                - install
                - upgrade
                type: string
            required:
            - input_params
            - products
            - stages
            - workflow_type
            type: object
          status:
            properties:
              argo_workflow:
                description: The unique name of the Argo workflow that is created
                  from all the input parameters above.
                type: string
              message:
                type: string
              observedGeneration:
                type: integer
              operations:
                description: A 2-level DAG of Operations derived from stages that
                  would be executed for each of the products that are specified. This
                  is not specified by the Admin -- it is computed from the list of
                  stages above.  This is an array of array of CR names of Operations
                  that are installed as part of IUF, and determined by the Stages
                  supplied.
                items:
                  items:
                    type: string
                  type: array
                type: array
              phase:
                type: string
            required:
            - observedGeneration
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
