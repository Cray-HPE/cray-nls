// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/ncns/{hostname}/reboot": {
            "post": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NCNs"
                ],
                "summary": "End to end reboot of a single ncn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v1/ncns/{hostname}/rebuild": {
            "post": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NCNs"
                ],
                "summary": "End to end rebuild of a single ncn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v1/workflows": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin",
                            "read"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflow"
                ],
                "summary": "Get status of a ncn workflow",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v1/workflows/{name}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin",
                            "read"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflow"
                ],
                "summary": "Delete a ncn workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of workflow",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v1/workflows/{name}/rerun": {
            "put": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin",
                            "read"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflow"
                ],
                "summary": "Rerun a workflow, all steps will run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of workflow",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v1/workflows/{name}/retry": {
            "put": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin",
                            "read"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflow"
                ],
                "summary": "Retry a failed ncn workflow, skip passed steps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of workflow",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v2/ncn": {
            "post": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2"
                ],
                "summary": "Add a ncn",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v2/ncns/reboot": {
            "post": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2"
                ],
                "summary": "End to end rolling reboot request",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v2/ncns/rebuild": {
            "post": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2"
                ],
                "summary": "End to end rolling rebuild request",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/v2/ncns/{hostname}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Application": [
                            "admin"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2"
                ],
                "summary": "Remove a ncn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": "                             Grants read and write access to administrative information",
                "read": "                              Grants read access"
            }
        }
    },
    "tags": [
        {
            "description": "\u003e \u003e \u003e \u003e #### End to end rebuild/reboot of a single ncn node\n",
            "name": "NCNs"
        },
        {
            "description": "\u003e \u003e \u003e #### Workflow management\n",
            "name": "Workflow"
        },
        {
            "description": "\u003e \u003e \u003e \u003e \u003e #### Future phase: End to end rebuild/reboot of a group of ncn nodes\n",
            "name": "V2"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/apis/nls",
	Schemes:          []string{},
	Title:            "NCN Lifecycle Management API",
	Description:      "## TODO\n\nwe need some doc here @Alex\n\n---\n\n[API Doc](swagger.md)\n",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
