#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
basePath: /apis
definitions:
  Activity:
    properties:
      activity_state:
        description: State of activity
        enum:
        - paused
        - in_progress
        - debug
        - blocked
        - wait_for_admin
        type: string
      input_parameters:
        $ref: '#/definitions/InputParameters'
        description: Input parameters by admin
      name:
        description: Name of activity
        type: string
      operation_outputs:
        additionalProperties: true
        description: Operation outputs from argo
        type: object
      products:
        description: List of products included in an activity
        items:
          $ref: '#/definitions/Product'
        type: array
    required:
    - activity_state
    - input_parameters
    - operation_outputs
    - products
    type: object
  Activity.CreateActivityRequest:
    properties:
      name:
        description: Name of activity
        type: string
    required:
    - name
    type: object
  History:
    properties:
      activity_state:
        description: State of activity
        enum:
        - paused
        - in_progress
        - debug
        - blocked
        - wait_for_admin
        type: string
      comment:
        description: Comment
        type: string
      name:
        description: Comment
        type: string
      session_name:
        description: Name of the session
        type: string
      start_time:
        description: Epoch timestamp
        type: integer
    required:
    - activity_state
    type: object
  History.HistoryActionRequest:
    properties:
      comment:
        description: Comment
        type: string
      start_time:
        description: Epoch timestamp
        type: integer
    type: object
  History.HistoryRunActionRequest:
    properties:
      comment:
        description: Comment
        type: string
      input_parameters:
        $ref: '#/definitions/InputParameters'
    required:
    - input_parameters
    type: object
  History.ReplaceHistoryCommentRequest:
    properties:
      comment:
        description: Comment
        type: string
    type: object
  InputParameters:
    properties:
      bootprep_config_managed:
        description: Each item is a path of the bootprep files
        items:
          type: string
        type: array
      bootprep_config_management:
        description: Each item is a path of the bootprep files
        items:
          type: string
        type: array
      force:
        description: Force re-execution of stage operations
        type: boolean
      limit_nodes:
        description: Each item is the xname of a node
        items:
          type: string
        type: array
      media_dir:
        description: Location of media
        type: string
      site_parameters:
        description: The inline contents of the site_parameters.yaml file.
        type: string
      stages:
        description: Stages to execute
        items:
          type: string
        type: array
    type: object
  Operations:
    properties:
      name:
        description: Name of the operation
        type: string
      static-parameters:
        additionalProperties: true
        type: object
    required:
    - name
    - static-parameters
    type: object
  Product:
    properties:
      manifest:
        description: the content of manifest
        type: string
      name:
        description: The name of the product
        type: string
      original_location:
        description: The original location of the extracted tar in on the physical
          storage.
        type: string
      validated:
        description: The flag indicates md5 of a product tarball file has been validated
        type: boolean
      version:
        description: The version of the product.
        type: string
    required:
    - name
    - original_location
    - validated
    - version
    type: object
  ResponseError:
    properties:
      message:
        type: string
    type: object
  Session:
    properties:
      current_state:
        enum:
        - paused
        - in_progress
        - debug
        - completed
        type: string
      input_parameters:
        $ref: '#/definitions/InputParameters'
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/Product'
        type: array
      stage:
        type: string
      workflows:
        items:
          $ref: '#/definitions/Session.Workflow'
        type: array
    required:
    - products
    type: object
  Session.Workflow:
    properties:
      id:
        description: id of argo workflow
        type: string
      url:
        description: url to the argo workflow
        type: string
    type: object
  Stage:
    properties:
      name:
        description: Name of the stage
        type: string
      operations:
        description: operations
        items:
          $ref: '#/definitions/Operations'
        type: array
      type:
        description: Type of the stage
        type: string
    required:
    - name
    - operations
    - type
    type: object
  Stages:
    properties:
      stages:
        items:
          $ref: '#/definitions/Stage'
        type: array
      version:
        type: string
    required:
    - stages
    - version
    type: object
info:
  contact: {}
paths:
  /iuf/v1/activities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Activity'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List IUF activities
      tags:
      - Activities
    post:
      consumes:
      - application/json
      parameters:
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/Activity.CreateActivityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Activity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Create an IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get an IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_name}/history:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/History'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List history of an iuf activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/{start_time}:
    get:
      consumes:
      - application/json
      parameters:
      - description: start time of a history item
        in: path
        name: start_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/History'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get a history item of an iuf activity
      tags:
      - History
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: start time of a history item
        in: path
        name: start_time
        required: true
        type: string
      - description: Modify comment of a history
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/History.ReplaceHistoryCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/History'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: replace comment of a history item of an iuf activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/abort:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/History.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "501":
          description: Not Implemented
      summary: Abort a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/blocked:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/History.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "501":
          description: Not Implemented
      summary: Mark a session blocked
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/paused:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/History.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "501":
          description: Not Implemented
      summary: Pause a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/resume:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/History.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "501":
          description: Not Implemented
      summary: Resume an activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/run:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/History.HistoryRunActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Session'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Run a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/sessions:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List sessions of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_name}/sessions/{session_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: session name
        in: path
        name: session_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get a session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/stages:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stages'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get the IUF stages
      tags:
      - Stages
swagger: "2.0"
