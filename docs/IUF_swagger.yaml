basePath: /apis
definitions:
  ResponseError:
    properties:
      message:
        type: string
    type: object
  iuf.Activity:
    properties:
      activity_state:
        allOf:
        - $ref: '#/definitions/iuf.ActivityState'
        description: State of activity
        enum:
        - paused
        - in_progress
        - debug
        - blocked
        - wait_for_admin
      input_parameters:
        allOf:
        - $ref: '#/definitions/iuf.InputParameters'
        description: Input parameters by admin
      name:
        description: Name of activity
        type: string
      operation_outputs:
        additionalProperties: true
        description: Operation outputs from argo
        type: object
      products:
        description: List of products included in an activity
        items:
          $ref: '#/definitions/iuf.Product'
        type: array
      site_parameters:
        allOf:
        - $ref: '#/definitions/iuf.SiteParameters'
        description: Site parameters set by the admin
    required:
    - activity_state
    - input_parameters
    - operation_outputs
    - products
    - site_parameters
    type: object
  iuf.ActivityState:
    enum:
    - in_progress
    - paused
    - debug
    - blocked
    - wait_for_admin
    type: string
    x-enum-varnames:
    - ActivityStateInProgress
    - ActivityStatePaused
    - ActivityStateDebug
    - ActivityStateBlocked
    - ActivityStateWaitForAdmin
  iuf.CreateActivityRequest:
    properties:
      name:
        description: Name of activity
        type: string
    required:
    - name
    type: object
  iuf.EManagementRolloutStrategy:
    enum:
    - reboot
    - rebuild
    type: string
    x-enum-varnames:
    - EManagementRolloutStrategyReboot
    - EManagementRolloutStrategyRebuild
  iuf.EManagedRolloutStrategy:
    enum:
    - reboot
    - stage
    type: string
    x-enum-varnames:
    - EManagedRolloutStrategyReboot
    - EManagedRolloutStrategyStaged
  iuf.History:
    properties:
      activity_state:
        allOf:
        - $ref: '#/definitions/iuf.ActivityState'
        description: State of activity
        enum:
        - paused
        - in_progress
        - debug
        - blocked
        - wait_for_admin
      comment:
        description: Comment
        type: string
      name:
        description: Comment
        type: string
      session_name:
        description: Name of the session
        type: string
      start_time:
        description: Epoch timestamp
        type: integer
    required:
    - activity_state
    type: object
  iuf.HistoryAbortRequest:
    properties:
      comment:
        description: Comment
        type: string
      force:
        description: Force terminate Argo workflows non-gracefully
        type: boolean
    type: object
  iuf.HistoryActionRequest:
    properties:
      comment:
        description: Comment
        type: string
    type: object
  iuf.HistoryRestartRequest:
    properties:
      comment:
        description: Comment
        type: string
      force:
        description: Force all operations to be re-executed irrespective if they have
          been successful in the past
        type: boolean
    type: object
  iuf.HistoryRunActionRequest:
    properties:
      comment:
        description: Comment
        type: string
      input_parameters:
        $ref: '#/definitions/iuf.InputParameters'
      site_parameters:
        $ref: '#/definitions/iuf.SiteParameters'
    required:
    - input_parameters
    type: object
  iuf.InputParameters:
    properties:
      boot_image_management:
        description: The IMS image ID to be used for booting management nodes
        type: string
      bootprep_config_managed:
        description: The path to the bootprep config file for managed nodes, relative
          to the media_dir
        type: string
      bootprep_config_management:
        description: The path to the bootprep config file for management nodes, relative
          to the media_dir
        type: string
      cfs_configuration_management:
        description: The cfs configuration name to be used for booting management nodes
        type: string
      concurrency:
        description: An integer defining how many products / operations can we concurrently
          execute.
        type: integer
      concurrent_management_rollout_percentage:
        description: The percentage of management nodes to reboot in parallel before
          moving on to the next set of management nodes to reboot.
        type: integer
      force:
        description: Force re-execution of stage operations
        type: boolean
      limit_managed_nodes:
        description: Anything accepted by BOS v2 as the value to a session's limit
          parameter.
        items:
          type: string
        type: array
      limit_management_nodes:
        description: Must in the form <role>_<subrole>. E.g. Management_Master, Management_Worker,
          Management_Storage
        items:
          type: string
        type: array
      management_rollout_strategy:
        allOf:
        - $ref: '#/definitions/iuf.EManagementRolloutStrategy'
        description: Whether to use a reboot or rebuild rollout strategy for management
          nodes.
        enum:
        - reboot
        - rebuild
      managed_rollout_strategy:
        allOf:
        - $ref: '#/definitions/iuf.EManagedRolloutStrategy'
        description: Whether to use a reboot or staged rollout strategy for managed
          nodes. Refer to BOS v2 for more details.
        enum:
        - reboot
        - stage
      media_dir:
        description: Location of media
        type: string
      media_host:
        description: A string containing the hostname of where the media is located
        type: string
      site_parameters:
        description: 'DEPRECATED: use site_parameters at the top level of the activity
          or session resource. The inline contents of the site_parameters.yaml file.'
        type: string
      stages:
        description: Stages to execute
        items:
          type: string
        type: array
    type: object
  iuf.Operations:
    properties:
      include-default-product-in-site-params:
        type: boolean
      name:
        description: Name of the operation
        type: string
      required-manifest-attributes:
        items:
          type: string
        type: array
      static-parameters:
        additionalProperties: true
        type: object
    required:
    - name
    - static-parameters
    type: object
  iuf.Product:
    properties:
      manifest:
        description: the content of manifest
        type: string
      name:
        description: The name of the product
        type: string
      original_location:
        description: The original location of the extracted tar in on the physical
          storage.
        type: string
      validated:
        description: The flag indicates md5 of a product tarball file has been validated
        type: boolean
      version:
        description: The version of the product.
        type: string
    required:
    - name
    - original_location
    - validated
    - version
    type: object
  iuf.ReplaceHistoryCommentRequest:
    properties:
      comment:
        description: Comment
        type: string
    type: object
  iuf.Session:
    properties:
      current_state:
        allOf:
        - $ref: '#/definitions/iuf.SessionState'
        enum:
        - paused
        - in_progress
        - debug
        - completed
        - aborted
      input_parameters:
        $ref: '#/definitions/iuf.InputParameters'
      name:
        type: string
      processed_products_by_stage:
        additionalProperties:
          additionalProperties:
            type: boolean
          type: object
        description: |-
          When product stage workflow is too large for Argo, we split that stage into multiple workflows. This map tracks that state of what's already processed.
           Note that this map is only used for when there are multiple workflows for the same stage.
           The first index is the stage name, and the second index is the product_name-product_version. The value is always true
        type: object
      products:
        items:
          $ref: '#/definitions/iuf.Product'
        type: array
      site_parameters:
        $ref: '#/definitions/iuf.SiteParameters'
      stage:
        type: string
      workflows:
        items:
          $ref: '#/definitions/iuf.SessionWorkflow'
        type: array
    required:
    - products
    type: object
  iuf.SessionState:
    enum:
    - in_progress
    - paused
    - debug
    - completed
    - aborted
    type: string
    x-enum-varnames:
    - SessionStateInProgress
    - SessionStatePaused
    - SessionStateDebug
    - SessionStateCompleted
    - SessionStateAborted
  iuf.SessionWorkflow:
    properties:
      id:
        description: id of argo workflow
        type: string
      url:
        description: url to the argo workflow
        type: string
    type: object
  iuf.SiteParameters:
    properties:
      global:
        additionalProperties: true
        description: global parameters applicable to all products
        type: object
      products:
        additionalProperties:
          additionalProperties: true
          type: object
        description: Product-specific parameters
        type: object
    type: object
  iuf.Stage:
    properties:
      name:
        description: Name of the stage
        type: string
      no-hooks:
        description: no-hook indicates that there are no hooks that should be run
          for this stage
        type: boolean
      operations:
        description: operations
        items:
          $ref: '#/definitions/iuf.Operations'
        type: array
      process-product-variants-sequentially:
        description: this stage wants to make sure all products with the same name
          (but different versions) are processed sequentially, not in parallel, to
          avoid operational race conditions
        type: boolean
      type:
        description: Type of the stage
        type: string
    required:
    - name
    - operations
    - type
    type: object
  iuf.Stages:
    properties:
      hooks:
        additionalProperties:
          type: string
        type: object
      stages:
        items:
          $ref: '#/definitions/iuf.Stage'
        type: array
      version:
        type: string
    required:
    - stages
    - version
    type: object
info:
  contact: {}
paths:
  /iuf/v1/activities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/iuf.Activity'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List IUF activities
      tags:
      - Activities
    post:
      consumes:
      - application/json
      parameters:
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/iuf.CreateActivityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/iuf.Activity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Create an IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.Activity'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get an IUF activity
      tags:
      - Activities
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.Activity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Patches an existing IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_name}/history:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/iuf.History'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List history of an iuf activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/{start_time}:
    get:
      consumes:
      - application/json
      parameters:
      - description: start time of a history item
        in: path
        name: start_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.History'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get a history item of an iuf activity
      tags:
      - History
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: start time of a history item
        in: path
        name: start_time
        required: true
        type: string
      - description: Modify comment of a history
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/iuf.ReplaceHistoryCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.History'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: replace comment of a history item of an iuf activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/abort:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Abort Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryAbortRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Abort a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/blocked:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Mark a session blocked
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/paused:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Pause a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/restart:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryRestartRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/iuf.Session'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Restart a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/resume:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Resume an activity
      tags:
      - History
  /iuf/v1/activities/{activity_name}/history/run:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: Action Request
        in: body
        name: action_request
        required: true
        schema:
          $ref: '#/definitions/iuf.HistoryRunActionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/iuf.Session'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Run a session
      tags:
      - History
  /iuf/v1/activities/{activity_name}/sessions:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/iuf.Session'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: List sessions of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_name}/sessions/{session_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: session name
        in: path
        name: session_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.Session'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get a session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/stages:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/iuf.Stages'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get the IUF stages
      tags:
      - Stages
swagger: "2.0"
