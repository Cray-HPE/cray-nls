#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
basePath: /apis
definitions:
  Iuf.Activity:
    properties:
      inputs:
        $ref: '#/definitions/IufSession.InputParams'
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/Iuf.Product'
        type: array
      sessions:
        items:
          properties:
            name:
              type: string
            spec:
              $ref: '#/definitions/IufSession.Spec'
            status:
              $ref: '#/definitions/IufSession.Status'
          type: object
        type: array
    type: object
  Iuf.CreateOrPatchActivityRequest:
    properties:
      inputs:
        $ref: '#/definitions/IufSession.InputParams'
      products:
        items:
          $ref: '#/definitions/Iuf.Product'
        type: array
    type: object
  Iuf.Product:
    properties:
      name:
        type: string
      version:
        type: string
    type: object
  IufSession.InputParams:
    properties:
      vcs_working_branch_pattern:
        description: 'The pattern to use for all products. Use the following variables
          in braces {} to specify the pattern:  {product_name} {product_version}  E.g.  {product_name}-{product_version}-test-branch'
        type: string
      vcs_working_branch_per_product:
        additionalProperties:
          type: string
        description: Specify the working branch name per product. This is an object
          where the key is the product name, and the value is the exact name (not
          a pattern) of the VCS branch for that product.
        type: object
    type: object
  IufSession.Product:
    properties:
      after_hook_scripts:
        additionalProperties:
          type: string
        description: Any after hook scripts for this product. This is an object where
          the key is operation name, and value is the CR name of the hook script for
          this product.  Hook scripts are executed either before or after an execution
          of a operation. They are specified in each product's distribution file,
          as part of the iuf-manifest.yaml.  The hook scripts are initially taken
          from the product distribution file and stored in S3, so that they can later
          be referenced.
        type: object
      before_hook_scripts:
        additionalProperties:
          type: string
        description: Any before hook scripts for this product. This is an object where
          the key is operation name, and value is the CR name of the hook script for
          this product.  Hook scripts are executed either before or after an execution
          of a operation. They are specified in each product's distribution file,
          as part of the iuf-manifest.yaml.  The hook scripts are initially taken
          from the product distribution file and stored in S3, so that they can later
          be referenced.
        type: object
      name:
        description: The name of the product
        type: string
      original_location:
        description: The original location of the extracted tar in on the physical
          storage.
        type: string
      version:
        description: The version of the product.
        type: string
    type: object
  IufSession.Spec:
    properties:
      input_params:
        $ref: '#/definitions/IufSession.InputParams'
      products:
        description: The products that need to be installed, as specified by the Admin.
        items:
          $ref: '#/definitions/IufSession.Product'
        type: array
      stages:
        description: |-
          The stages that need to be executed.
          This is either explicitly specified by the Admin, or it is computed from the workflow type.
          An Stage is a group of Operations. Stages represent the overall workflow at a high-level, and executing a stage means executing a bunch of Operations in a predefined manner.  An Admin can specify the stages that must be executed for an install-upgrade workflow. And Product Developers can extend each stage with custom hook scripts that they would like to run before and after the stage's execution.  The high-level stages allow their configuration would revealing too many details to the consumers of IUF.
          if not specified, we apply all stages
        items:
          type: string
        type: array
      workflow_type:
        description: What type of workflow are we executing? install or upgrade
        type: string
    type: object
  IufSession.Status:
    properties:
      argo_workflow:
        description: The unique name of the Argo workflow that is created from all
          the input parameters above.
        type: string
      message:
        type: string
      observedGeneration:
        type: integer
      operations:
        description: A 2-level DAG of Operations derived from stages that would be
          executed for each of the products that are specified. This is not specified
          by the Admin -- it is computed from the list of stages above.  This is an
          array of array of CR names of Operations that are installed as part of IUF,
          and determined by the Stages supplied.
        items:
          items:
            type: string
          type: array
        type: array
      phase:
        type: string
    type: object
info:
  contact: {}
paths:
  /iuf/v1/activities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Iuf.Activity'
            type: array
        "501":
          description: Not Implemented
      summary: List IUF activities
      tags:
      - IUF
  /iuf/v1/activities/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Iuf.Activity'
        "501":
          description: Not Implemented
      summary: Get an IUF activities
      tags:
      - IUF
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity id
        in: path
        name: id
        required: true
        type: string
      - description: partial IUF activity
        in: body
        name: partial_activity
        required: true
        schema:
          $ref: '#/definitions/Iuf.CreateOrPatchActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Iuf.Activity'
        "501":
          description: Not Implemented
      summary: Patch an IUF activities
      tags:
      - IUF
  /iuf/v1/activity:
    post:
      consumes:
      - application/json
      parameters:
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/Iuf.CreateOrPatchActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Iuf.Activity'
        "501":
          description: Not Implemented
      summary: Create an IUF activity
      tags:
      - IUF
swagger: "2.0"
