#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
basePath: /apis
definitions:
  Activity:
    properties:
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/Activity.Spec'
      status:
        $ref: '#/definitions/Activity.Status'
    type: object
  Activity.Spec:
    properties:
      bootprep_config_managed:
        items:
          type: string
        type: array
      bootprep_config_management:
        items:
          type: string
        type: array
      current_comment:
        type: string
      is_blocked:
        type: boolean
      is_completed:
        type: boolean
      limit_nodes:
        items:
          type: string
        type: array
      media_dir:
        description: location of media
        type: string
      site_parameters:
        description: json string
        type: string
    required:
    - bootprep_config_managed
    - bootprep_config_management
    - media_dir
    - site_parameters
    type: object
  Activity.Status:
    properties:
      bootprep_config_managed:
        items:
          type: string
        type: array
      bootprep_config_management:
        items:
          type: string
        type: array
      limit_nodes:
        items:
          type: string
        type: array
      media_dir:
        description: location of media
        type: string
      products:
        items:
          $ref: '#/definitions/Product'
        type: array
      sessions:
        items:
          $ref: '#/definitions/Session'
        type: array
      site_parameters:
        description: json string
        type: string
    required:
    - bootprep_config_managed
    - bootprep_config_management
    - media_dir
    - site_parameters
    type: object
  Product:
    properties:
      name:
        description: The name of the product
        type: string
      original_location:
        description: The original location of the extracted tar in on the physical
          storage.
        type: string
      validated:
        description: The flag indicates md5 of a product tarball file has been validated
        type: boolean
      version:
        description: The version of the product.
        type: string
    required:
    - name
    - original_location
    - validated
    - version
    type: object
  Session:
    properties:
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/Session.Spec'
      status:
        $ref: '#/definitions/Session.Status'
    type: object
  Session.CurrentState:
    properties:
      comment:
        type: string
      type:
        type: string
    required:
    - type
    type: object
  Session.Spec:
    properties:
      bootprep_config_managed:
        items:
          type: string
        type: array
      bootprep_config_management:
        items:
          type: string
        type: array
      limit_nodes:
        items:
          type: string
        type: array
      media_dir:
        description: location of media
        type: string
      products:
        items:
          $ref: '#/definitions/Product'
        type: array
      site_parameters:
        description: json string
        type: string
      stages:
        description: |-
          The stages that need to be executed.
          This is either explicitly specified by the Admin, or it is computed from the workflow type.
          An Stage is a group of Operations. Stages represent the overall workflow at a high-level, and executing a stage means executing a bunch of Operations in a predefined manner.  An Admin can specify the stages that must be executed for an install-upgrade workflow. And Product Developers can extend each stage with custom hook scripts that they would like to run before and after the stage's execution.  The high-level stages allow their configuration would revealing too many details to the consumers of IUF.
          if not specified, we apply all stages
        items:
          type: string
        type: array
    required:
    - bootprep_config_managed
    - bootprep_config_management
    - media_dir
    - products
    - site_parameters
    type: object
  Session.Stage:
    properties:
      name:
        type: string
      state:
        type: string
      workflou_id:
        type: string
      workflou_output:
        additionalProperties:
          type: string
        type: object
    required:
    - name
    - state
    - workflou_id
    type: object
  Session.Status:
    properties:
      current_state:
        $ref: '#/definitions/Session.CurrentState'
      stages:
        items:
          $ref: '#/definitions/Session.Stage'
        type: array
    type: object
  v1.FieldsV1:
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
info:
  contact: {}
paths:
  /iuf/v1/activities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Activity'
            type: array
        "501":
          description: Not Implemented
      summary: List IUF activities
      tags:
      - Activities
  /iuf/v1/activities/{activity_uid}/session:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      - description: IUF session
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/Session'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
        "501":
          description: Not Implemented
      summary: Create a new session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_uid}/sessions:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
        "501":
          description: Not Implemented
      summary: List sessions of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_uid}/sessions/{session_uid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      - description: session uid
        in: path
        name: session_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: Stop a running session of an IUF activity
      tags:
      - Sessions
    get:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      - description: session uid
        in: path
        name: session_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: Get a session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_uid}/sessions/{session_uid}/resume:
    post:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      - description: session uid
        in: path
        name: session_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: Resume a stopped session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{uid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Get an IUF activity
      tags:
      - Activities
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: id
        required: true
        type: string
      - description: partial IUF activity
        in: body
        name: partial_activity
        required: true
        schema:
          $ref: '#/definitions/Activity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Patch an IUF activity
      tags:
      - Activities
  /iuf/v1/activity:
    post:
      consumes:
      - application/json
      parameters:
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/Activity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Create an IUF activity
      tags:
      - Activities
swagger: "2.0"
