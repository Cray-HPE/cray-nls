#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
basePath: /apis
definitions:
  Activity:
    properties:
      activity_states:
        description: History of states
        items:
          $ref: '#/definitions/Activity.State'
        type: array
      input_parameters:
        $ref: '#/definitions/Activity.InputParameters'
        description: Input parameters by admin
      name:
        description: Name of activity
        type: string
      operation_outputs:
        additionalProperties: true
        description: Operation outputs from argo
        type: object
      products:
        description: List of products included in an activity
        items:
          $ref: '#/definitions/Product'
        type: array
    required:
    - activity_states
    - input_parameters
    - operation_outputs
    - products
    type: object
  Activity.CreateActivityRequest:
    properties:
      input_parameters:
        $ref: '#/definitions/Activity.InputParameters'
        description: Input parameters by admin
      name:
        description: Name of activity
        type: string
    required:
    - input_parameters
    - name
    type: object
  Activity.InputParameters:
    properties:
      bootprep_config_managed:
        description: Each item is a path of the bootprep files
        items:
          type: string
        type: array
      bootprep_config_management:
        description: Each item is a path of the bootprep files
        items:
          type: string
        type: array
      force:
        description: Force re-execution of stage operations
        type: boolean
      limit_nodes:
        description: Each item is the xname of a node
        items:
          type: string
        type: array
      media_dir:
        description: Location of media
        type: string
      site_parameters:
        description: The inline contents of the site_parameters.yaml file.
        type: string
      stages:
        description: Execution of the specified stages
        items:
          type: string
        type: array
    type: object
  Activity.PatchActivityRequest:
    properties:
      input_parameters:
        $ref: '#/definitions/Activity.InputParameters'
    required:
    - input_parameters
    type: object
  Activity.State:
    properties:
      comment:
        type: string
      session_name:
        type: string
      start_time:
        type: string
      state:
        type: string
    required:
    - session_name
    - start_time
    - state
    type: object
  Product:
    properties:
      name:
        description: The name of the product
        type: string
      original_location:
        description: The original location of the extracted tar in on the physical
          storage.
        type: string
      validated:
        description: The flag indicates md5 of a product tarball file has been validated
        type: boolean
      version:
        description: The version of the product.
        type: string
    required:
    - name
    - original_location
    - validated
    - version
    type: object
  Session:
    properties:
      products:
        items:
          $ref: '#/definitions/Product'
        type: array
      stages:
        description: |-
          The stages that need to be executed.
          This is either explicitly specified by the Admin, or it is computed from the workflow type.
          An Stage is a group of Operations. Stages represent the overall workflow at a high-level, and executing a stage means executing a bunch of Operations in a predefined manner.  An Admin can specify the stages that must be executed for an install-upgrade workflow. And Product Developers can extend each stage with custom hook scripts that they would like to run before and after the stage's execution.  The high-level stages allow their configuration would revealing too many details to the consumers of IUF.
          if not specified, we apply all stages
        items:
          type: string
        type: array
    required:
    - products
    type: object
info:
  contact: {}
paths:
  /iuf/v1/activities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Activity'
            type: array
        "501":
          description: Not Implemented
      summary: List IUF activities
      tags:
      - Activities
    post:
      consumes:
      - application/json
      parameters:
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/Activity.CreateActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Create an IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_id}/history:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: List stages of iuf
      tags:
      - History
  /iuf/v1/activities/{activity_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Get an IUF activity
      tags:
      - Activities
    patch:
      consumes:
      - application/json
      parameters:
      - description: activity name
        in: path
        name: activity_name
        required: true
        type: string
      - description: IUF activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/Activity.PatchActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Activity'
        "501":
          description: Not Implemented
      summary: Get an IUF activity
      tags:
      - Activities
  /iuf/v1/activities/{activity_uid}/sessions:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
        "501":
          description: Not Implemented
      summary: List sessions of an IUF activity
      tags:
      - Sessions
  /iuf/v1/activities/{activity_uid}/sessions/{session_uid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: activity uid
        in: path
        name: activity_uid
        required: true
        type: string
      - description: session uid
        in: path
        name: session_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: Get a session of an IUF activity
      tags:
      - Sessions
  /iuf/v1/stages:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Session'
        "501":
          description: Not Implemented
      summary: List stages of iuf
      tags:
      - Stages
swagger: "2.0"
