#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
basePath: /apis/nls
definitions:
  ResponseError:
    properties:
      message:
        type: string
    type: object
  ResponseOk:
    properties:
      message:
        type: string
    type: object
  models.CreateRebootWorkflowRequest:
    properties:
      dryRun:
        type: boolean
      hosts:
        items:
          type: string
        type: array
      switchPassword:
        type: string
      wipeOsd:
        type: boolean
    type: object
  models.CreateRebootWorkflowResponse:
    properties:
      name:
        type: string
      targetNcns:
        items:
          type: string
        type: array
    type: object
  models.CreateRebuildWorkflowRequest:
    properties:
      dryRun:
        type: boolean
      hosts:
        items:
          type: string
        type: array
      switchPassword:
        type: string
      wipeOsd:
        type: boolean
    type: object
  models.CreateRebuildWorkflowResponse:
    properties:
      name:
        type: string
      targetNcns:
        items:
          type: string
        type: array
    type: object
  models.GetWorkflowResponse:
    properties:
      label:
        type: object
      name:
        type: string
      status:
        type: object
    type: object
  models.RetryWorkflowRequestBody:
    properties:
      restartSuccessful:
        type: boolean
      stepName:
        type: string
    type: object
  v1.HookStatus:
    properties:
      observedGeneration:
        type: integer
      phase:
        type: string
    type: object
  v1.SyncResponse:
    properties:
      resyncAfterSeconds:
        type: integer
      status:
        $ref: '#/definitions/v1.HookStatus'
    type: object
info:
  contact: {}
  description: |
    ## NCN Lifecycle Events

    A set of REST APIs that allow system admin to create ncn lifecycle event such as reboot/rebuild. It uses argo workflow to run defined procedures for each event.

    ## NCN Lifecycle Hooks [details](https://github.com/Cray-HPE/cray-nls/blob/master/docs/NCN%20Lifecycle%20Hooks.md)

    A set of REST APIs that allow system admin or developers to register customize hooks as part of argo workflow.

    ## Security [details](https://github.com/Cray-HPE/cray-nls/blob/master/docs/security.md)

    ## Argo UI [details](https://github.com/Cray-HPE/cray-nls/blob/master/docs/argo.md)
  title: NCN Lifecycle Management API
  version: "1.0"
paths:
  /v1/ncns/hooks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "501":
          description: Not Implemented
      summary: Get ncn lifecycle hooks
      tags:
      - NCN Lifecycle Hooks
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.SyncResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get ncn lifecycle hooks
      tags:
      - NCN Lifecycle Hooks
  /v1/ncns/hooks/{hook_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id of a hook
        in: path
        name: hook_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "501":
          description: Not Implemented
      summary: Get ncn lifecycle hooks
      tags:
      - NCN Lifecycle Hooks
    put:
      consumes:
      - application/json
      parameters:
      - description: id of a hook
        in: path
        name: hook_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "501":
          description: Not Implemented
      summary: Update a ncn lifecycle hook
      tags:
      - NCN Lifecycle Hooks
  /v1/ncns/reboot:
    post:
      consumes:
      - application/json
      parameters:
      - description: hostnames to include
        in: body
        name: include
        required: true
        schema:
          $ref: '#/definitions/models.CreateRebootWorkflowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateRebootWorkflowResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: End to end rolling reboot ncns
      tags:
      - NCN Lifecycle Events
  /v1/ncns/rebuild:
    post:
      consumes:
      - application/json
      parameters:
      - description: hostnames to include
        in: body
        name: include
        required: true
        schema:
          $ref: '#/definitions/models.CreateRebuildWorkflowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateRebuildWorkflowResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: End to end rolling rebuild ncns
      tags:
      - NCN Lifecycle Events
  /v1/workflows:
    get:
      consumes:
      - application/json
      parameters:
      - description: Label Selector
        in: query
        name: labelSelector
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetWorkflowResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Get status of a ncn workflow
      tags:
      - Workflow Management
  /v1/workflows/{name}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: name of workflow
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Delete a ncn workflow
      tags:
      - Workflow Management
  /v1/workflows/{name}/rerun:
    put:
      consumes:
      - application/json
      parameters:
      - description: name of workflow
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Rerun a workflow, all steps will run
      tags:
      - Workflow Management
  /v1/workflows/{name}/retry:
    put:
      consumes:
      - application/json
      parameters:
      - description: name of workflow
        in: path
        name: name
        required: true
        type: string
      - description: retry options
        in: body
        name: retryOptions
        required: true
        schema:
          $ref: '#/definitions/models.RetryWorkflowRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      summary: Retry a failed ncn workflow, skip passed steps
      tags:
      - Workflow Management
swagger: "2.0"
