basePath: /api/v1
definitions:
  utils.ResponseError:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: |-
    <h1>This is a description</h1>
    <h3>Multiple line description</h3>
    ##### Markdown is here
    `cmd`
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: NCN Lifecycle Management API
  version: "1.0"
paths:
  /ncn/{hostname}/bakcup:
    get:
      consumes:
      - application/json
      description: Create a NCN backup before rebuild
      parameters:
      - description: Hostname
        in: path
        name: hostname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseError'
      summary: Create a NCN backup
      tags:
      - NCN
    post:
      consumes:
      - application/json
      description: Create a NCN backup before rebuild
      parameters:
      - description: Hostname
        in: path
        name: hostname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseError'
      summary: Create a NCN backup
      tags:
      - NCN
  /ncn/first-master:
    get:
      consumes:
      - application/json
      description: Get hostname of first master
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseError'
      summary: Get hostname of first master
      tags:
      - NCN
    put:
      consumes:
      - application/json
      description: Move first master to a master ncn
      parameters:
      - description: Hostname of target first master
        in: body
        name: hostname
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseError'
      summary: Move first master to a master ncn
      tags:
      - NCN
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: '                            Grants read and write access to administrative
        information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: '                             Grants read and write access to administrative
        information'
      write: '                             Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: '                          Grants read and write access to administrative
        information'
      write: '                          Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: '                          Grants read and write access to administrative
        information'
      read: '                           Grants read access'
      write: '                          Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
