#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: sat-general
spec:
  entrypoint: main
  templates:
    ### Main Steps ###
    - name: main
      inputs:
        parameters:
          - name: auth_token
          - name: global_params
          - name: scriptContent
      steps:
        - - name:
            template: sat-wrapper
            arguments:
              parameters:
                - name: auth_token
                  value: "{{inputs.parameters.auth_token}}"
                - name: scriptContent
                  value: "{{inputs.parameters.scriptContent}}"
    ### Templates ###
    ## sat-wrapper ##
    - name: sat-wrapper
      nodeSelector:
        kubernetes.io/hostname: ncn-m001
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
      inputs:
        parameters:
          - name: ca_certs_bundle
            value: /etc/ssl/certs/ca-certificates.crt
          - name: auth_token
          - name: scriptContent
      script:
        image: artifactory.algol60.net/sat-docker/stable/cray-sat:3.20.0
        command: [sh]
        source: |
          #!/bin/sh
          ts=$(echo $RANDOM | md5sum | head -c 20; echo)
          cat <<'EOF' > "/tmp/${ts}.sh"

          set -e
          sat init

          # Write the auth token parameter to the file
          JSON_FMT='{"access_token":"%s"}\n'
          printf "$JSON_FMT" "{{inputs.parameters.auth_token}}" > /root/.config/sat/token.json
          echo -n $(tr -d "\n\r" < /root/.config/sat/token.json) > /root/.config/sat/token.json

          # Set up the SAT config to use the token file
          sed -i -e 's|.*token_file.*|token_file = "/root/.config/sat/token.json"|' /root/.config/sat/sat.toml

          {{inputs.parameters.scriptContent}}

          EOF
          chmod +x /tmp/${ts}.sh
          bash -e /tmp/${ts}.sh

          cat /tmp/${ts}.sh
        env:
          - name: LOG_LEVEL
            value: INFO
          - name: REQUESTS_CA_BUNDLE
            value: "{{inputs.parameters.ca_certs_bundle}}"
        volumeMounts:
          - name: certs # mount cluster certs to ca-certificates.crt for curl/http libraries
            mountPath: /etc/ssl/certs/ca-certificates.crt
            subPath: platform-ca-certs.crt
      volumes:
        - name: certs
          hostPath:
            path: /etc/pki/trust/anchors
