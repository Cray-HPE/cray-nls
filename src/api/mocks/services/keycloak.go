// Code generated by MockGen. DO NOT EDIT.
// Source: src/api/services/nls/keycloak.go

// Package mock_services_shared is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeycloakService is a mock of KeycloakService interface.
type MockKeycloakService struct {
	ctrl     *gomock.Controller
	recorder *MockKeycloakServiceMockRecorder
}

// MockKeycloakServiceMockRecorder is the mock recorder for MockKeycloakService.
type MockKeycloakServiceMockRecorder struct {
	mock *MockKeycloakService
}

// NewMockKeycloakService creates a new mock instance.
func NewMockKeycloakService(ctrl *gomock.Controller) *MockKeycloakService {
	mock := &MockKeycloakService{ctrl: ctrl}
	mock.recorder = &MockKeycloakServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeycloakService) EXPECT() *MockKeycloakServiceMockRecorder {
	return m.recorder
}

// NewKeycloakAccessToken mocks base method.
func (m *MockKeycloakService) NewKeycloakAccessToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewKeycloakAccessToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewKeycloakAccessToken indicates an expected call of NewKeycloakAccessToken.
func (mr *MockKeycloakServiceMockRecorder) NewKeycloakAccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewKeycloakAccessToken", reflect.TypeOf((*MockKeycloakService)(nil).NewKeycloakAccessToken))
}
